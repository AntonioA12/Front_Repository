this 용법

    여러개의 요소를 의미하는 CSS 셀렉터를 사용하여 이벤트를 정의한 경우
    대상 요소들은 모두 동일한 이벤트 발생시킬 수 있다.

    $(this)는 현재 이벤트가 발생한 단 하나의 요소를 가리킨다.

not(this)

    
    $(요소) 객채의 not(this)함수는 
    여러 HTML 요소들 중에 이벤트가 발생한 자신을 제외한 나머지 객체들을 의미. 

    <ul>
        <li></li>
        <li></li>
        <li></li>
    </ul>

    $("ul > li").이벤트( function () {
        $(this).html('안녕') // 내가 클릭한 요소에 적용
        $("ul> li").not(this).html("hello") // 나머지 는 hello 라고 적용 
    })


    <button class='btn'> 버튼 1 </button>
    <button class='btn' id="mybtn"> 버튼 2 </button>
    <button class='btn'> 버튼 3 </button>

    - not ( id 값 )
        $(".btn").not($("#mybtn")).css(' ...' )
            = btn 클래스 모두 적용 단, id 가 mybtn인 태그 빼고

    - <button> 태그 중에서 3번째 요소만 제외하기 
        $(".btn").not(".btn:eq(2)"),css() 
            = button 태그중 3번째 태그만 제외하고 적용  

애니메이션 처리

    show() hide() toggle() [왔다갔다]
    fadeIn() : 점점 나타나기
    fadeOut() : 점점 사라지기
    fadeToggle() : 점점 나타나기 <-> 사라지기

    slideDown()
    slideUp()
    slideToggle()

Modal 

    부모창 위에 열려있는 팝업창이 자신이 닫히기 전에는 
    부모창에 접근하지 못하게 하는 형태의 윈도우 

    window.open() 처리로는 modal 윈도우를 구현할 수 없다.
    따라서 HTML 페이지 안에 빈 <div> 를 숨겨놓고 이벤트 발생시 팝업처럼 실행한다. 
        ( 작은 이미지 따로, 큰 이미지 따로, 작은 이미지 클릭시 html 안의 또 하나의 <태그> 를 호출 )

특정 요소를 기준으로 주변 탐색하기

    하나의 요소를 기준 으로 
        이전, 다음, 상위, 하위, 하위 n 번쨰 요소를
        리턴하는 함수를 통해 HTML 구조를 탐색할 수있다.  

    메소드 명       설명

    next()          현재 요소를 기준으로 다음 요소 리턴
    prev()          현재 요소를 기준으로 이전 요소 리턴
    parent()        현재 요소를 기준으로 상위 요소 리턴
    children()      현재 요소를 기준으로 하위 요소를 [배열]로 리턴
    eq(n)           현재 요소를 기준으로 n번째 요소 선택 ( n의 값은 0부터 시작)


<input> 요소의 입력값 검사

val()함수 

    입력값 설정하기
        파라미터를 통해 입력값을 설정
        
        $("셀렉터").val("내용")
            ("내용") 이 -> $(요소) 에 들어간다

    입력값 조회하기
        파라미터 없이 함수를 호출하면
        현재 설정되어 있는 입력값을 리턴받는다 

        변수 생성을 통해 입력값 가져오기 
          let value = $("셀렉터").val()

        조회한 입력값의 존재 여부를 if문으로 검사하면 입력여부를 알 수있다.
            if(!value){ 
                값이 없다면 해당 코드 실행 
            }

    focus() 

        focus() 함수는 입력 요소에 포커스를 강제로 설정한다.
        $(셀렉터).focus(강제로 설정할 내용)

    입력값 검사 패턴

        let id = $(셀렉터).val()

        if ( ! id) { 
            alert('아이디를 입력해주세요)
            $(셀렉터).focus()
            return false;
        }

        입력값이 비어있다면 
        focuse() 를 통해 강제로 id를 입력할수 있게끔 설정

        
