select

    선택 값 조회
    만약 <option> 요소에 value 속성이 없을 경우, 태그 안의 내용을 가져오기 때문에
    값이 필요없는 항목이더라도 반드시 공백을 지정해야한다.

        <select id="user">
            <option>-- 선택하세요 -- </option>
            <option value="1">항목1</option>
            <option>항목2</option>
        </select>



Radio의 선택항목

    선택 값 조회하기
    여러 개의 항목중에서 선택된 항목을 의미하는 셀렉터인 
    " :checked" 를 사용해 선택요소 에 접근

    라디오 버튼은 여러개의 항목 중에서 단 하나만 선택함으로
    " :checked" 를 사용하여 접근하는 요소 역시 단일요소가 된다.

        $("셀렉터:checked").val()

checkbox

    복수 선택이 가능한 요소 
    <input type="checkbox" name="hello" class="mycheck" value="1" />
    <input type="checkbox" name="hello" class="mycheck" value="2" />
    <input type="checkbox" name="hello" class="mycheck" value="3" />

    $("셀렉터:checked)

    복수선택이 가능하기 떄문에 접근한요소는
    배열 형태로 리턴

each 문 [ 반복처리 ]

    HTML 요소에 대한 반복처리를 수행하는 경우
    배열의 각 요소에 대한 index 값을 사용하여 원소에 접근해야 한다.

    $.each() 함수는 HTML 요소의 수 만큼 콜백함수 를 호출하면서
    배열의 인덱스와 원소를 파라미터로 전달한다.

        for ( let i = 0 ; i < element.length ; i ++ ){
            let value = $(element[i]).val()
        }

        $.each(element , function ( index , item)){
            // index : 배열 위치
            // item  : 배열의 각 원소 
            let value = $(item).val()
        }

focus() 관련 이벤트처리

    요소에 focus() 가 들어갔음을 감지하는 이벤트
        focus()는 함수로서 사용할 경우 
        강제로 입력을 지정되는 기능과 동시에
        이벤트로써 사용할 경우 focus()가 들어갔음을 감지하는 기능 또한 있다. ( 강제 입력 + 입력감지 )

            $("셀렉터").focus( function(){
                // 포커스가 입력되었습니다 ( = 감지 )
            })

    focus() 가 빠져나왔음을 감지하는 이벤트 

        blur() 함수
            focus() 가 빠져나왔음을 감지하는 함수

            $("셀렉터").blur( function() {
                // 포커스가 빠져나왔습니다.  
            }) 

change() 이벤트

    ? - 상태가 변경되었을 때 ( focus() 가 빠져나올 때 = 변경 )
    ? - 즉시 발생하는 이벤트 

        ex) 주소 입력칸 3개 ( XX시 XX구 XX동 ) 있을 때
            서울 시 선택시 - 서울 안의 구 리스트 로 변경
            수원 시 선택시 - 수원 안의 구 리스트 로 변경

            특정 요소의 선택에 따라 
                다른 요소의 data가 change() 되는 경우 사용 

    요소의 입력, 선택 상태가 변경되었음을 감지하는 이벤트 

        $("셀렉터").change(  function() {

        })

        텍스트를 입력하는 요소일 경우
            내용이 변경되고, focus() 빠져나올때 이벤트 발생
        체크박스 or 라디오 버튼 일 경우
            선택상태가 변경된 즉시 발생 
        드롭다운 , select box 일 경우 
            선택 상태가 변경된 즉시 발생 
    
HTML 속성의 종류

attribute

    값을 갖는 속성
    설정값 조회     attr(key)
    설정값 지정     attr(key, value)

property
    
    값을 갖지 않는 속성    ( checked ,selected 와 달리 값이 없는 속성 )
    설정값 조회         prop(key)
    값 설정 기능        prop(key ,  boolean )
    ** boolean , disabled,   checked ,  selected

    $(셀렉터).prop("disabled", true)


정규표현식

    특정한 규칙을 가진 문자열의 집합을 표현하는데 사용하는 형식언어
    정규 표현식을 많은 텍스트 편집기와 프로그래밍 언어에서 문자열의 [ 검색 or 치환 ] 을 지원하고 있다.

정규표현식 사용

    let regex = /정규표현식/ ;
    if ( ! regex.test(검사할 문자열) ){
        // test() 리턴값이 T or F 이기 때문에 
        // 정규표현식 조건에 맞지 않을 경우에만 if 문이 실행된다. 
    }

    javaScript 에서는 정규표현식을 ' / ' 로 표현한다.
    정규표현식은 하나의 객체 형태가 된다.
        때문에 내장하고있는 test() 메소드를 통해 문자열이 그 식에 부합하면 true, 아니면 False 로 리턴 

